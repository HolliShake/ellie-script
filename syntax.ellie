

true ? "y" : "Hello!";

3 + 10.2;

"Hey yow!" + "Hola!";

1 + 2 + 3;

fn test_void() Void {
    2 + 2;
}

const sum_of_add Number = add(200, 23);

console.warn(":>>", sum_of_add);

fn add(a Number, b Number) Number {
    return a + b;
}

fn sub(a Int, b Int) Int {
    {
        if (true)
        {
            2 + 2;
            return a + b;
        }
        
        return 2n;
    }
}

fn mul(a Int, b Int) Int {
    return a * b;
}

"Yeha" == "Yeha";

if (3 > 2) 
    100 << 100;
else 
    3 > 2;

var sum Number = 2 + 2, dif String = ("Hola" + "World!");

const x Int = 100n, y Number = sum;

console.log(1, 2, 3, add(20, 35), 20 + 32);
console.warn;
console.error;
mul(1n, 1000n);

fn factorial(n Number) Number {
    let x Number = 2, y String = "Yellow";
    if (n <= 1)
        return 1;

    return n * factorial(n - 1);
}

fn foo() Void {
    return null;
}

console.log(factorial(5));
console.error(factorial(5));

if (3 > 2) {
    const x Int = 10n;
}

pub async fn get_name() String {
    return "";
}

pub fn exp() Number {
    while (3 > 2) {
        return 1;
    }
    {
        {
            return 1;
        }
    }
}

var index Number = 0;

while (index < 5) {
    let msg String = "Loop";
    console.log(msg + "...", index = index + 1);
}

console.log("INDEX:", index++);
console.log("INDEX:",  index );
index++;

if (true && false) {
    console.warn("Hello!");
} else 
    console.error("Nah!");

pub var K Int = 2n;
pub const V Int = K + 10n;

var z Int;

console.log(z);

const nu Number? = 10 * 2;

console.log(nu);

fn return_array() Array<String> {
    return Array<String> [
        "Hello",
        "World",
        "Nah!" 
    ];
}

console.warn([1, 2, 3, 4, "Yeah"]);

var x_arr Array<String> = return_array();
x_arr.push("ADDED0");
x_arr.push("ADDED1");
x_arr.push("ADDED2");
x_arr.push("100000");
x_arr.push("200000");
x_arr.unshift("a", "b", "c", "d");
console.log(x_arr);
x_arr.pop();
console.log(x_arr);